*************************
2-matrix_divided.py usage
*************************

``matrix_divided(...)`` returns a new matrix that is a copy of the parameter
``matrix`` with all elements divided by ``div``.

**
    >>> matrix_divided = __import__('2-matrix_divided').matrix_divided
    >>> matrix = [
    ...     [9, 6, 9],
    ...     [12, 13, 14]
    ... ]

**
    the function can handle floating point numbers

     >>> matrix = [
    ...     [3.1, -4.2, 6.3],
    ...     [4.4, 5.5, -6.6]
    ... ]

**
    Integers and floats can be combined.
    
     >>> matrix = [
    ...     [1, 2.5, 3,- 3.4, 5],
    ...     [-7.8, 7.00, 8, 9.999, 10]
    ... ]

******************
Errors [TypeError]
******************

**
 >>> matrix = "not a list"
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

**
  >>> matrix = []
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

**
  >>> matrix = [1, 2, 3]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: matrix must be a matrix (list of lists) of integers/floats

**
 >>> matrix = [
    ...     [1, 2, 3, 4],
    ...     [5, 6, 7]
    ... ]
    >>> print(matrix_divided(matrix, 3))
    Traceback (most recent call last):
    TypeError: Each row of the matrix must have the same size

**
 >>> print(matrix_divided(matrix, None))
    Traceback (most recent call last):
    TypeError: div must be a number
